// Top-level build file where you can add configuration options common to all sub-projects/modules.
apply plugin: 'com.huawei.ohos.app'

//For instructions on signature configuration, see https://developer.harmonyos.com/cn/docs/documentation/doc-guides/ide_debug_device-0000001053822404#section1112183053510
ohos {
    compileSdkVersion 8
    signingConfigs {
        debug {
            storeFile file('signs\\OpenHarmony.p12')
            storePassword '00000016AC378B1FECCAFF8E49A871A54D12CA6BD5F4CE1D932414EE9CA119B28BB239AFAB6A'
            keyAlias = 'OpenHarmony Application CA'
            keyPassword '00000016022E1570597F702ED9641DF2C2B914160A07423337B974370A26C48BBBF6479508D3'
            signAlg = 'SHA256withECDSA'
            profile file('signs\\com.ohos.mms.p7b')
            certpath file('signs\\IDE.cer')
        }
        release {
            storeFile file('signs\\OpenHarmony.p12')
            storePassword '00000016885CAF8FF83DE130396B1828AFAB4AB42CDE3AAE8D0B56597A63F37F42C419A1910A'
            keyAlias = 'OpenHarmony Application CA'
            keyPassword '000000165D468138AA56D3B714428073CB0821EA43BD405E5C2DA4CCEC66847BB04EF4599248'
            signAlg = 'SHA256withECDSA'
            profile file('signs\\com.ohos.mms.p7b')
            certpath file('signs\\IDE.cer')
        }
    }
    supportSystem "standard"
}

buildscript {
    repositories {
        maven {
            url 'http://repo.ark.tools.huawei.com/artifactory/maven-public/'
            allowInsecureProtocol = true
        }
        maven {
            url 'http://mirrors.tools.huawei.com/maven/'
            allowInsecureProtocol = true
        }
    }
    dependencies {
        classpath 'com.huawei.ohos:hap:3.0.6.4'
//        classpath 'com.huawei.ohos:decctest:3.0.4.3'
    }
}

allprojects {
    repositories {
        maven {
            url 'http://repo.ark.tools.huawei.com/artifactory/maven-public/'
            allowInsecureProtocol = true
        }
        maven {
            url 'http://mirrors.tools.huawei.com/maven/'
            allowInsecureProtocol = true
        }
    }
}

task assembleDebugSignHap(type: Exec, dependsOn: ':entry:assembleDebug') {
    workingDir('./signs')
    commandLine 'cmd', '/c', 'sign'
}
